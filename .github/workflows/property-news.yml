name: Daily Property News

on:
  schedule:
    - cron: '0 7 * * *'  # Runs at 7:00 AM UTC daily
  workflow_dispatch:  # Allows manual triggering

jobs:
  fetch-and-process:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install feedparser requests beautifulsoup4 python-dateutil pandas google-api-python-client google-auth-httplib2 google-auth-oauthlib pillow openai
          
      - name: Create directories
        run: |
          mkdir -p exports
          mkdir -p images
          mkdir -p articles
          mkdir -p formatted
          
      - name: Run daily property news scripts
        env:
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          python fetch_news_daily.py
          python enhanced_content_tracking.py
          python ai_content_generator.py
          python create_social_content_daily.py
          python create_final_csv_daily_v2.py # Use V2 for Zapier compatibility (includes Title)
          
      - name: Debug files
        run: |
          echo "Checking CSV files:"
          ls -la exports/
          echo "Checking CSV content (final_v2):"
          head -n 10 exports/property_news_social_content_final_v2_$(date +%Y-%m-%d).csv || echo "Final V2 CSV not found or empty"
          echo "Checking articles JSON content:"
          head -n 10 articles/latest_property_news.json || echo "Articles JSON not found or empty"
          
      - name: Create credentials file directly
        run: |
          cat > credentials.json << 'EOL'
          ${{ secrets.GOOGLE_SHEETS_CREDENTIALS }}
          EOL
          ls -la credentials.json
          
      - name: Image Integration and Multi-Tab Google Sheet Upload
        env:
          GOOGLE_SHEET_ID: ${{ secrets.GOOGLE_SHEET_ID }}
          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
        run: |
          # This script now handles image fetching, Google Drive upload, and multi-tab Google Sheet update
          # Using the corrected version of the script
          python fixed_image_integration_multi_tab_v2.py
          
      - name: Commit images to repository
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add images/
          if git diff --staged --quiet; then
            echo "No new images to commit."
          else
            git commit -m "Add property news images [skip ci]"
            git push || echo "Nothing to push or push failed (e.g. protected branch)"
          fi
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: property-news-files
          path: |
            exports/*.csv
            exports/upload_complete_multitab.txt
            images/*.jpg
            articles/latest_property_news.json
            articles/processed_articles_history.json
            articles/published_posts_history.json
            
      - name: Notify on completion
        if: success()
        run: |
          echo "Daily property news automation completed successfully!"
          echo "CSV files and multi-tab Google Sheet output ready for Zapier."
          
      - name: Notify on failure
        if: failure()
        run: |
          echo "Daily property news automation failed. Check the logs for details."

